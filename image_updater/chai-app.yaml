apiVersion: argoproj.io/v1alpha1 # Specifies the API version for the ArgoCD Application CRD
kind: Application               # Declares this resource as an ArgoCD Application
metadata:
  name: chai-app                # Name of the ArgoCD Application
  namespace: argocd             # Namespace where the Application resource will be created
  annotations:
    # Assign alias 'chai-app' to your image
    argocd-image-updater.argoproj.io/image-list: chai-app=sandeepmohapatra177/chai-devops # Maps the image alias 'chai-app' to your DockerHub image

    # Use git write-back
    argocd-image-updater.argoproj.io/write-back-method: git:secret:argocd/argocd-image-updater-git-creds # Configures image updater to write changes back to Git using provided secret

    # Update strategy for chai-app image
    argocd-image-updater.argoproj.io/chai-app.update-strategy: semver # Uses semantic versioning for image updates

spec:
  project: default              # Associates this Application with the 'default' ArgoCD project
  source:
    repoURL: https://github.com/sandeepmohapatra177/ArgoCD.git # Git repository containing the app manifests
    targetRevision: main        # Branch or tag to track in the repository
    path: image_updater/chai-app # Path within the repo where the manifests(kustomization) are located
  destination:
    server: https://172.17.0.1:33893 # Kubernetes API server address (in-cluster)
    namespace: default           # Namespace in the cluster where app resources will be deployed
  syncPolicy:
    automated:                  # Enables automated sync for the application
      prune: true               # Automatically deletes resources that are no longer defined in Git
      selfHeal: true            # Automatically corrects drift between live and desired state

# Brief: This ArgoCD Application manifest configures automated deployment and image updates for the 'chai-app' using ArgoCD Image Updater, with changes written back to Git.
ok
